# class Director:
#     def __init__(self, name, nacionality, movies):
#         self.name = name
#         self.nacionality = nacionality
#         self.movies = []


#     def __str__(self):
#         return f"{self.name}"

#     def add_movie(self, movie):
#         self.movies.append(movie)

#     def get_movies(self):
#         return self.movies


    # class Movies:
    #     def __init__(self, title, generate, duration, director):
    #         self.title = title
    #         self.generate = generate
    #         self.duration = duration
    #         self.director = director

    #     def __repr__(self):
    #         return f"Movies(title={self.title}, generate={self.generate}, duration={self.duration}, director={self.director})"

# class Cinema: 
#     def __init__(self, ):
#         self.movies = []
    
#     def add_movie(self, movie):
#         self.movies.append(movie)

#     def get_movies(self):
#         return self.movies


# def main():

#     director_1 = Director('M. Night Shyamalan', [])
#     director_2 = Director('Dennis Dugan', [])
#     director_3 = Director('Matthew Vaughn', [])


#     movie_1 = Movies('Fragmentado', Terror - intriga, 1.57,  director_1)
#     movie_2 = Movies('Los huespedes',Terror, 1.34, director_1)
#     movie_3 = Movies('Una esposa de mentiras', Comedia-Romance, 1.57, director_2)
#     movie_4 = Movies('Son como ni√±os dos', Comedia, 1.41, director_2)
#     movie_5 = Movies('Kingsman', Accion, 2.09, director_3)

#     # print(author_1)

#     director_1.add_movie(movie_1)
#     director_1.add_movie(movie_2)
#     director_2.add_movie(movie_3)
#     director_2.add_movie(movie_4)
#     director_3.add_movie(movie_5)

#     movies_director2 =director_2.get_movies()

#     cinema = Cinema()

#     cinema.add_movie(movie_1)
#     cinema.add_movie(movie_2)
#     cinema.add_movie(movie_3)


#     list_movies = cinema.get_movies()

#     for movie in list_movies:
#         print(movie.director)

# main()





# class Movies:
#     def __init__(self, title, generate, duration, director):
#         self.title = title
#         self.generate = generate
#         self.duration = duration
#         self.director = director

#     def __repr__(self):
#         return f"Movies(title={self.title}, generate={self.generate}, duration={self.duration}, director={self.director})"


#     def __str__(self):
#         return f"{self.name}"

#     def add_movie(self, movie):
#         self.movies.append(movie)